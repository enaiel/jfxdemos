<?xml version="1.0" encoding="UTF-8"?>
<!--
   SPDX-License-Identifier: Apache-2.0

   Copyright (c) 2024 enaiel.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

  	   https://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.micronarts.jfxdemos</groupId>
	<artifactId>jfxdemos</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>jfxdemos</name>
	<description>A collection of demos for JavaFX.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
		<maven.jar.plugin.version>3.3.0</maven.jar.plugin.version>
		<maven.shade.plugin.version>3.2.1</maven.shade.plugin.version>
		<native.maven.plugin.version>0.10.3</native.maven.plugin.version>
		<maven.surefire.plugin.version>3.2.2</maven.surefire.plugin.version>
		<maven.javadoc.plugin.version>3.10.1</maven.javadoc.plugin.version>
		<maven.source.plugin.version>3.3.0</maven.source.plugin.version>
		<exec.maven.plugin.version>3.1.1</exec.maven.plugin.version>
		<javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
		<junit.version>4.13.2</junit.version>
		<testfx.version>4.0.18</testfx.version>
		<java.version>11</java.version>
		<javafx.version>17.0.0.1</javafx.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<verbose>false</verbose>
					<fork>false</fork>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!--dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-swing</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit</artifactId>
			<version>${testfx.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies-->

	<profiles>
		<profile>
			<id>openjfx</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.openjfx</groupId>
						<artifactId>javafx-maven-plugin</artifactId>
						<version>${javafx.maven.plugin.version}</version>
						<configuration>
							<stripDebug>true</stripDebug>
							<compress>2</compress>
							<noHeaderFiles>true</noHeaderFiles>
							<noManPages>true</noManPages>
							<launcher>${project.artifactId}</launcher>
							<jlinkImageName>${project.artifactId}</jlinkImageName>
							<!--jlinkZipName>${project.artifactId}</jlinkZipName-->
							<mainClass>${mainModuleName}/${mainClassName}</mainClass>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>run-jlink</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/${project.artifactId}/bin/${project.artifactId}</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jpms</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>run-jpms</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>--module-path</argument>
										<modulepath/>
										<argument>--module</argument>
										<argument>${mainModuleName}/${mainClassName}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>fatjar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>${maven.shade.plugin.version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<createDependencyReducedPom>false</createDependencyReducedPom>
									<shadedArtifactAttached>true</shadedArtifactAttached>
									<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
									<transformers>
										<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<mainClass>${mainClassName}</mainClass>
										</transformer>
									</transformers>
									<filters>
										<filter>
											<artifact>*:*</artifact>
											<excludes>
												<exclude>module-info.class</exclude>
											</excludes>
										</filter>
									</filters>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>run-fatjar</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-jar</argument>
										<argument>${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native.maven.plugin.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<imageName>${imageName}</imageName>
							<mainClass>${mainClassName}</mainClass>
							<buildArgs>
								<!-- Quick build mode -->
								<buildArg>-Ob</buildArg>
								<buildArg>-H:+AllowJRTFileSystem</buildArg>
								<buildArg>--enable-url-protocols=http,https</buildArg>
								<buildArg>-Djava.awt.headless=false</buildArg>
							</buildArgs>
							<agent>
								<enabled>true</enabled>
							</agent>
							<metadataRepository>
								<enabled>true</enabled>
							</metadataRepository>
							<fallback>false</fallback>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>java-agent</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-classpath</argument>
										<classpath/>
										<argument>${mainClassName}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>run-native</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/${project.artifactId}</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>animatefx-demo</module>
		<module>calendarfx-demo</module>
		<module>charts-demo</module>
		<module>controlsfx-demo</module>
		<module>desktoppanefx-demo</module>
		<module>formsfx-demo</module>
		<module>gemsfx-demo</module>
		<module>ikonli-demo</module>
		<module>jmetro-demo</module>
		<module>medusa-demo</module>
		<module>miglayout-demo</module>
		<module>pdfviewfx-demo</module>
		<module>preferencesfx-demo</module>
		<module>richtextfx-demo</module>
		<module>systemtray-demo</module>
		<module>tilesfx-demo</module>
		<module>tiwulfx-dock-demo</module>
		<module>undofx-demo</module>
		<module>workbenchfx-demo</module>
	</modules>

</project>
